import Head from "next/head"
import Image from "next/image"

import styles from "@/styles/Home.module.css"
import Banner from "@/components/Banner"
import Card from "@/components/Card"
import { fetchCoffeeStore } from "@/lib/coffee-store"
import useTrackLocation from "@/hooks/use-track-location"
import { useContext, useEffect, useState } from "react"
import { DataContext } from "@/store/GlobalState"
import { ACTION_TYPES } from "@/store/Actions"

export async function getStaticProps(context) {
    const coffeeStores = await fetchCoffeeStore()
    return {
        props: {
            coffeeStores,
        },
    }
}

export default function Home(props) {
    const { locationErrorMsg, handleTrackLocation, isFindingLocation } =
        useTrackLocation()
    const [coffeeStoresNearMeError, setCoffeeStoresNearMeError] = useState(null)

    const { state, dispatch } = useContext(DataContext)
    const { latLong, coffeeStores } = state

    useEffect(() => {
        const fetchData = async () => {
            if (latLong) {
                try {
                    const response = await fetch(
                        `/api/getCoffeeStoresByLocation?latLong=${latLong}&limit=30`
                    )
                    const fetchCoffeeStores = await response.json()
                    dispatch({
                        type: ACTION_TYPES.SET_COFFEE_STORE,
                        payload: { coffeeStores: fetchCoffeeStores },
                    })
                } catch (error) {
                    setCoffeeStoresNearMeError(error.message)
                }
            }
        }
        fetchData()
    }, [latLong])

    const handleOnBannerBtnClick = () => {
        handleTrackLocation()
    }
    return (
        <>
            <Head>
                <title>Coffee Connoisseur</title>
                <meta
                    name='description'
                    content='Generated by create next app'
                />
                <meta
                    name='viewport'
                    content='width=device-width, initial-scale=1'
                />
                <link rel='icon' href='/favicon.ico' />
            </Head>
            <main className={`${styles.main}`}>
                <Banner
                    btnText={
                        isFindingLocation ? "Locating..." : "View stores nearby"
                    }
                    handleOnclick={handleOnBannerBtnClick}
                />
                {locationErrorMsg && (
                    <p>Something went wrong: {locationErrorMsg}</p>
                )}
                {coffeeStoresNearMeError && (
                    <p>Something went wrong: {coffeeStoresNearMeError}</p>
                )}
                <div className={styles.imageHero}>
                    <Image
                        alt='hero-image'
                        src='/static/hero-image.png'
                        width={700}
                        height={400}
                    />
                </div>

                {coffeeStores.length > 0 && (
                    <div className={styles.sectionWrapper}>
                        <h2 className={styles.heading2}>
                            Coffee stores near me
                        </h2>
                        <div className={styles.cardLayout}>
                            {coffeeStores.map((item, index) => (
                                <Card
                                    key={index}
                                    name={item.name}
                                    imgUrl={
                                        item.imgUrl ||
                                        "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"
                                    }
                                    href={`/coffee-store/${item.id}`}
                                />
                            ))}
                        </div>
                    </div>
                )}

                {props.coffeeStores.length > 0 && (
                    <div className={styles.sectionWrapper}>
                        <h2 className={styles.heading2}>Tay Ninh Stores</h2>
                        <div className={styles.cardLayout}>
                            {props.coffeeStores.map((item, index) => (
                                <Card
                                    key={index}
                                    name={item.name}
                                    imgUrl={
                                        item.imgUrl ||
                                        "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"
                                    }
                                    href={`/coffee-store/${item.id}`}
                                />
                            ))}
                        </div>
                    </div>
                )}
            </main>
        </>
    )
}
